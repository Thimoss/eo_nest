// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
}

model Category {
  id        Int       @id @default(autoincrement())
  name      String
  slug      String    @unique
  code      String    @unique
  reference String
  location  String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime? // Nullable tanpa @default
}

model Sector {
  id        Int       @id @default(autoincrement())
  no        String
  name      String
  source    String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime? // Nullable tanpa @default
  items     Item[]    @relation("SectorItems")
}

model Item {
  id                   Int        @id @default(autoincrement())
  no                   String
  name                 String
  source               String? // Nullable field
  minimum              Int? // Nullable field
  unit                 String? // Nullable field
  materialPricePerUnit Float? // Nullable field
  feePerUnit           Float? // Nullable field
  sectorId             Int
  sector               Sector     @relation("SectorItems", fields: [sectorId], references: [id])
  subsItems            SubsItem[] @relation("ItemSubsItems")
  createdAt            DateTime   @default(now())
  updatedAt            DateTime   @updatedAt
  deletedAt            DateTime? // Nullable tanpa @default
}

model SubsItem {
  id                   Int           @id @default(autoincrement())
  no                   String
  name                 String
  source               String? // Nullable field
  minimum              Int? // Nullable field
  unit                 String? // Nullable field
  materialPricePerUnit Float? // Nullable field
  feePerUnit           Float? // Nullable field
  itemId               Int
  item                 Item          @relation("ItemSubsItems", fields: [itemId], references: [id])
  subsSubItems         SubsSubItem[] @relation("SubsItemSubsSubItems")
  createdAt            DateTime      @default(now())
  updatedAt            DateTime      @updatedAt
  deletedAt            DateTime? // Nullable tanpa @default
}

model SubsSubItem {
  id                   Int       @id @default(autoincrement())
  no                   String
  name                 String
  minimum              Int
  unit                 String
  materialPricePerUnit Float
  feePerUnit           Float
  subsItemId           Int
  subsItem             SubsItem  @relation("SubsItemSubsSubItems", fields: [subsItemId], references: [id])
  createdAt            DateTime  @default(now())
  updatedAt            DateTime  @updatedAt
  deletedAt            DateTime? // Nullable tanpa @default
}
