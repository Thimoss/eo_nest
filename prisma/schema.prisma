// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
}

model Category {
  id        Int       @id @default(autoincrement())
  name      String
  slug      String    @unique
  code      String    @unique
  reference String
  location  String
  sectors   Sector[]  @relation("CategorySectors")
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
}

model Sector {
  id           Int       @id @default(autoincrement())
  no           String
  name         String
  source       String?
  items        Item[]    @relation("SectorItems")
  category     Category  @relation("CategorySectors", fields: [categoryId], references: [id])
  categoryId   Int
  categoryCode String
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  deletedAt    DateTime?
}

model Item {
  id                   Int       @id @default(autoincrement())
  no                   String
  name                 String
  source               String?
  minimum              Float?
  unit                 String?
  materialPricePerUnit Float?
  feePerUnit           Float?
  singleItem           Boolean
  categoryCode         String
  sectorNo             String
  sectorId             Int
  sector               Sector    @relation("SectorItems", fields: [sectorId], references: [id])
  createdAt            DateTime  @default(now())
  updatedAt            DateTime  @updatedAt
  deletedAt            DateTime?
}

model Document {
  id          Int          @id @default(autoincrement())
  name        String
  slug        String       @unique
  job         String       @default("")
  location    String       @default("")
  base        String       @default("")
  jobSections JobSection[] @relation("DocumentJobSections")
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  deletedAt   DateTime?
}

model JobSection {
  id                 Int              @id @default(autoincrement())
  name               String
  totalMaterialPrice Float            @default(0)
  totalFeePrice      Float            @default(0)
  document           Document         @relation("DocumentJobSections", fields: [documentId], references: [id])
  documentId         Int
  itemJobSections    ItemJobSection[] @relation("JobSectionItemJobSections")
  createdAt          DateTime         @default(now())
  updatedAt          DateTime         @updatedAt
  deletedAt          DateTime?
}

model ItemJobSection {
  id                   Int        @id @default(autoincrement())
  name                 String
  volume               Float
  minimumVolume        Float
  materialPricePerUnit Float
  feePricePerUnit      Float
  totalMaterialPrice   Float
  totalFeePrice        Float
  unit                 String
  information          String?
  jobSection           JobSection @relation("JobSectionItemJobSections", fields: [jobSectionId], references: [id])
  jobSectionId         Int
  createdAt            DateTime   @default(now())
  updatedAt            DateTime   @updatedAt
  deletedAt            DateTime?
}
