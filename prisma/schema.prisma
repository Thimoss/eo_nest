// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
}

model Category {
  id        Int       @id @default(autoincrement())
  name      String
  slug      String    @unique
  code      String    @unique
  reference String
  location  String
  sectors   Sector[]  @relation("CategorySectors")
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
}

model Sector {
  id         Int       @id @default(autoincrement())
  no         String    @unique
  name       String
  source     String?
  items      Item[]    @relation("SectorItems")
  category   Category  @relation("CategorySectors", fields: [categoryId], references: [id])
  categoryId Int
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  deletedAt  DateTime?
}

model Item {
  id                   Int        @id @default(autoincrement())
  no                   String
  name                 String
  source               String?
  minimum              Int?
  unit                 String?
  materialPricePerUnit Float?
  feePerUnit           Float?
  sectorId             Int
  sector               Sector     @relation("SectorItems", fields: [sectorId], references: [id])
  subsItems            SubsItem[] @relation("ItemSubsItems")
  createdAt            DateTime   @default(now())
  updatedAt            DateTime   @updatedAt
  deletedAt            DateTime?
}

model SubsItem {
  id                   Int           @id @default(autoincrement())
  no                   String
  name                 String
  source               String?
  minimum              Int?
  unit                 String?
  materialPricePerUnit Float?
  feePerUnit           Float?
  itemId               Int
  item                 Item          @relation("ItemSubsItems", fields: [itemId], references: [id])
  subsSubItems         SubsSubItem[] @relation("SubsItemSubsSubItems")
  createdAt            DateTime      @default(now())
  updatedAt            DateTime      @updatedAt
  deletedAt            DateTime?
}

model SubsSubItem {
  id                   Int       @id @default(autoincrement())
  no                   String
  name                 String
  minimum              Int
  unit                 String
  materialPricePerUnit Float
  feePerUnit           Float
  subsItemId           Int
  subsItem             SubsItem  @relation("SubsItemSubsSubItems", fields: [subsItemId], references: [id])
  createdAt            DateTime  @default(now())
  updatedAt            DateTime  @updatedAt
  deletedAt            DateTime?
}
